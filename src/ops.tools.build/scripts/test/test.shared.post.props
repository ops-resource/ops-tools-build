<?xml version="1.0" encoding="utf-8"?>
<Project
    DefaultTargets="Run"
    ToolsVersion="11.0"
    xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <!--
        **** TEST STEPS ****
    -->
    <!--
         A list of all additional scripts and their targets that should be executed before each of the selected deploy steps. Globally defined
         pre-steps will be executed prior to the presteps of the individual steps.

        The metadata to the script that is about to be executed is passed to each pre-step under the following properties:

        - StepDescription : The full description of the step to be executed.
        - StepId          : The ID of the step. In general the name of the property that references the step file.
        - StepName        : The name of the step.
        - StepPath        : The full path to the script file for the step.

        Additionally all the standard properties as seen below and the properties for the given deploy step are passed in.
    -->
    <ItemGroup>
        <!--
        <TestPreStepsToExecute Include="">
            <Properties>
            </Properties>
        </TestPreStepsToExecute>
        -->
    </ItemGroup>

    <!--
        A list of all additional scripts and their targets that should be executed after each of the selected deploy steps. Globally defined
         post-steps will be executed after the poststeps of the individual steps.

        The metadata to the script that is about to be executed is passed to each pre-step under the following properties:

        - StepDescription : The full description of the step to be executed.
        - StepId          : The ID of the step. In general the name of the property that references the step file.
        - StepName        : The name of the step.
        - StepPath        : The full path to the script file for the step.

        Additionally all the standard properties as seen below and the properties for the given deploy step are passed in.
    -->
    <ItemGroup>
        <!--
        <TestPostStepsToExecute Include="">
            <Properties>
            </Properties>
        </TestPostStepsToExecute>
        -->
    </ItemGroup>

    <!--
        If no test steps are defined by the ops.test.props file then we display the help file.
    -->
    <ItemGroup Condition=" '@(TestStepsToExecute)' == '' ">
        <TestStepsToExecute Include="$(TestStepsShowHelp)">
            <Properties>
                HelpFilePathSharedSettings=$(DirNBuildKitMsBuildShared)\shared.importtestsharedsettings.props;
                HelpFileSettings=test.settings.props;
                HelpProcess=test;
                HelpStepGroup=TestStepsToExecute;
            </Properties>
            <Groups>
                Help;
            </Groups>
            <PreSteps>
            </PreSteps>
            <PostSteps>
            </PostSteps>
        </TestStepsToExecute>
    </ItemGroup>

    <!--
        Define the scripts that should be executed when any one of the test steps fails.

        Steps can be defined by providing the path to the MsBuild script that should be executed
        for that step, e.g. adding a test step that points to the 'c:\stuff\MyCoolScript.msbuild' will execute
        that script.

        Each script has the following properties passed to it:
        $(ShouldDisplayDebugLog)         - A flag indicating whether or not to display debug log information, usually at the start of the script execution.
        $(NBuildKitVersion)              - The full version of the nBuildKit library that is executing the build.
        $(DirNBuildKitMsBuild)           - The full path to the directory that contains the nBuildKit scripts.
        $(DirNBuildKitMsBuildShared)     - The full path to the directory that contains the shared nBuildkit scripts.
        $(DirNBuildKitMsBuildExtensions) - The full path to the directory that contains the nBuildKit extension scripts.
        $(DirNBuildKitMsBuildTemplates)  - The full path to the directory that contains the nBuildKit templates.

        Additionally any properties defined by the 'Properties' section are also pushed up.
    -->
    <ItemGroup Condition=" '@(TestFailureStepsToExecute)' == '' ">
        <!--
        <TestFailureStepsToExecute Include="">
            <Properties>
            </Properties>
        </TestFailureStepsToExecute>
        -->
    </ItemGroup>

    <!--
        The following item group stores metadata describing the custom test steps that are executed in the test process.
        By providing this metadata it is possible for pre- and post-step actions to more clearly determine which step
        they were attached to.
    -->
    <ItemGroup>
        <!--
        <AvailableStepMetadata Include="$([System.IO.Path]::GetFileName('$(DirWorkspace)\my.test.step.msbuild'))">
            <Description>
                The description for my cool test step
            </Description>
            <Id></Id>
            <Name>My test step</Name>
            <Path>$(DirWorkspace)\my.test.step.msbuild</Path>
        </AvailableStepMetadata>
        -->
    </ItemGroup>


    <!--
        **** PREPARE - WORKSPACE ****
    -->
    <!--
        The list of all files that should be deleted prior to starting the test process.

        If the deletion process fails the test will continue and a warning will be printed.
    -->
    <ItemGroup Condition=" '@(TestFilesToDelete)' == '' ">
        <!--
        <TestFilesToDelete Include="" />
        -->
    </ItemGroup>

    <!--
        The list of all directories that should be deleted prior to starting the test process.
        Deleting the directories will also delete all the files contained in these directories.

        If the deletion process fails the test will continue and a warning will be printed.
    -->
    <ItemGroup Condition=" '@(TestDirectoriesToDelete)' == '' ">
        <!--
        <TestDirectoriesToDelete Include="" />
        -->
    </ItemGroup>

    <!--
        The list of all files that should be copied prior to starting the tests.
    -->
    <ItemGroup Condition=" '@(TestFilesToCopy)' == '' ">
        <!--<TestFilesToCopy Include="$(DirTest)\**\*.*">
            <TargetDirectory>$(DirBuildTest)</TargetDirectory>
        </TestFilesToCopy>-->
    </ItemGroup>


    <!--
        **** PREPARE - GENERATE FILES ****
    -->
    <!--
        The list of all files that should be generated and their template files.

        The template file may contain zero or more template parameters as indicated at the top of this
        file. By default template parameters must be enclosed in '${}'. By providing a value for
        'Expression' it is possible to use a custom regular expression to search for elements to replace,
        e.g. $TOKEN$. Note that elements in the regular expession might need to be converted in a suitable
        format because XML doesn't like < and > and MsBuild doesn't like $ (%24), * (%2A), ? (%3F).

        Only the 'Template' value is required.

        Additional parameters can be provided through the 'TemplateTokens' ItemGroup below.
    -->
    <ItemGroup Condition=" '@(TestFilesToGenerate)' == '' ">
        <!--
        <TestFilesToGenerate Include="$(DirBuildTemp)\MyFile.txt">
            <<Encoding>UTF-8</Encoding>
            <Expression>(MyRegex)</Expression>
            <ReplacementValue>MyAdditionalTemplateValue</ReplacementValue>
            <Template>$(DirTemplates)\MyOtherTemplatefile.txt</Template>
            <Token>MyAdditionalTemplateParameter</Token>
        </TestFilesToGenerate>
        -->
    </ItemGroup>


    <!--
        **** INTEGRATION - PESTER ****
    -->
    <!--
        The list of all arguments that should be passed to the Pester test.

        The value elements may contain zero or more template parameters as indicated at the top of this
        file. Template parameters must be enclosed in '${}'.
    -->
    <ItemGroup Condition=" '@(PesterTestArguments)' == '' ">
        <!--
        <PesterTestArguments Include="">
            <Value></Value>
        </PesterTestArguments>
        -->
    </ItemGroup>
</Project>
