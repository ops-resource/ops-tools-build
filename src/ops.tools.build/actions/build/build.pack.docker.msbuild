<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0"
         DefaultTargets="OpsToolsBuild_Build_Pack_Docker_Run"
         xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
    <PropertyGroup>
        <ExistsBuildImagePacker>true</ExistsBuildImagePacker>
    </PropertyGroup>
    <PropertyGroup>
        <ShouldLoadDockerImagesToBuild>true</ShouldLoadDockerImagesToBuild>
        <ShouldLoadTemplateTokens>true</ShouldLoadTemplateTokens>
        <ShouldLoadTemplateVersion>true</ShouldLoadTemplateVersion>
        <ShouldLoadSystemTemplateVersion>true</ShouldLoadSystemTemplateVersion>
    </PropertyGroup>

    <Import
        Condition="Exists('$(FileImports)') AND '$(ExistsFileImports)' != 'true' "
        Project="$(FileImports)" />

    <Target
        Condition=" '@(DockerImagesToBuild)' != '' "
        Name="OpsToolsBuild_Build_Pack_Docker_Run"
        Outputs="%(DockerImagesToBuild.Identity)">
        <Error
            Code="$(NBuildKitErrorCodeToolFileNotFound)"
            Condition=" '$(ToolsExternalDockerPath)' == '' "
            HelpKeyword="$(NBuildKitErrorIdToolFileNotFound)"
            Text="No docker executable defined. Will not be able to create Docker containers." />

        <CreateProperty Value="%(DockerImagesToBuild.Tags)" >
            <Output
                PropertyName="FileNameIsoSpec"
                TaskParameter="Value" />
        </CreateProperty>
        <CreateProperty Value="%(DockerImagesToBuild.Tags)">
            <Output
                PropertyName="DockerTagsWithSemiColons"
                TaskParameter="Value" />
        </CreateProperty>
        <TemplateText
            ErrorInformation="@(ErrorInformation)"
            Template="$(DockerTagsWithSemiColons)"
            Tokens="@(TemplateTokens)">
            <Output
                PropertyName="DockerTags"
                TaskParameter="Result" />
        </TemplateText>
        <CreateItem
            Condition=" '$(DockerTags)' != '' "
            Include="$(DockerTags.Split(';'))">
            <Output
                ItemName="DockerTags"
                TaskParameter="Include" />
        </CreateItem>

        <DockerBuild
            AlwaysRemoveIntermediateLayers="true"
            BuildContext="%(DockerImagesToBuild.FullPath)"
            DockerExecutablePath="$(ToolsExternalDockerPath)"
            DockerFile="%(DockerImagesToBuild.DockerFile)"
            ErrorInformation="@(ErrorInformation)"
            Isolation="%(DockerImagesToBuild.IsolationLevel)"
            NoCache="$(DockerIgnoreCache)"
            Pull="$(DockerAlwaysPull)"
            Squash="$(DockerSquashImages)"
            Tags="@(DockerTags)" />
    </Target>
</Project>
